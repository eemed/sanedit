document = (comment / attrs / mod_decl / const_decl / let_decl / string / char / unsafe / keyword / type / .)*;
#document = (comment / const / keyword / constant / unsafe / string / char / .)*;

visibility = "pub(crate)" / "pub(super)" / "pub";

@show
@highlight
keyword = ( "loop" / "let" / "match" / "if" / "else" / "while" / "break" / "move" / "async" / "dyn" / "return" / "for" / "in" / "as") end / (visibility / "use" / "fn" / "impl" / "struct" / "enum" / "const" / "trait" / "type" / "extern crate"  / "extern" ) end;


############ Mod
mod_decl = mod [ \t] ws (!nl .)* nl;

@show
@highlight(keyword)
mod = "mod";


########## String
@show
@highlight(string)
char = "'" . "'";

@show
@highlight
string    = "\"" compl_string "\"";
compl_string    = ("\\" escape_char / [^"\n])*;
escape_char     = "0" / "t" / "n" / "r" / "\"" / "\\";

end = &(WHITESPACE / ";" / "<");


############ Unsafe
@show
@highlight(operator)
unsafe = "unsafe" / "await";


############ Type
@show
@highlight
type = ref? (tuple / arr / predefined / typename / generic);

@show
@whitespaced
tuple = "(" type ("," type)* ")";
typename = [A..Z] [a..zA..Z0..9_]*;

@show
@highlight(array)
@whitespaced
arr = "[" type "]";

@show
@highlight(generic)
generic = "<" type ">";

predefined = ("usize" / "isize" / "u8" / "u16" / "u32" / "u64" / "i8" / "i16" / "i32" / "i64" / "str" / "bool" / "char") &[ \]),>;];

@whitespaced
id = "(" single_id ("," single_id)*  ")" / single_id;
single_id = [a..zA..Z_] [a..zA..Z0..9_]*;

########### Ref
@show
@highlight(operator)
ref = ref_op lifetime? ws mut_op? ws;

@show
@highlight(operator)
ref_op = "&";

@show
@highlight(operator)
mut_op = "mut";

lifetime = "'" [a..z]+;


############# Constants
@show
@whitespaced
const_decl = const const_id ":" type "=";

@show
@highlight(keyword)
const = "const";


@whitespaced
const_id = "(" single_const_id ("," single_const_id)*  ")" / single_const_id;

@show
@completion
@highlight(const)
single_const_id = single_id;


############## Variables
@show
@whitespaced
let_decl = let let_id (":" type)? "=";

@whitespaced
let_id = "(" single_let_id ("," single_let_id)*  ")" / single_let_id;

@show
@completion
@highlight(variable)
single_let_id = single_id;

@show
@highlight(keyword)
let = "let";


######### attrs
@show
@whitespaced
@highlight(preproc)
attrs = "#" "!"? "[" (!"]" .)* "]";

########## COMMENTS
@show
@highlight
comment = "//" (!nl .)* nl;

# TODO fix
WHITESPACE = " " / "\t" / nl;
#WHITESPACE = [ \t] / nl;
ws =  [ \t]*;
nl = "\r\n" / "\n" / "\r";
