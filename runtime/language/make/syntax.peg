rules =  (keywords / assign / subshell / string / comment / specials / target / silenced / .)*;


subshell = subshell_start gnu? (!subshell_end (subshell / .))* subshell_end;
@show @highlight(operator)
subshell_start = "$(";
@show @highlight(operator)
subshell_end = ")";

silenced = tab silence;

@show @highlight(operator)
silence = "@";
tab = "\t";

assign = assign_id ws* assign_op ws* (subshell / string / comment / next_line / (!nl .))+;
@show @highlight(operator)
assign_op = (":" / "+" /"?")? "=";

assign_id = [a..zA..Z0..9_-]+;

target =  nl target_id (ws* target_id)* target_sep (ws* (depend_id / next_line))*;
@show @highlight(operator)
target_sep = ":";

@show @highlight(identifier)
target_id = [a..zA..Z0..9_.-]+;
depend_id = [a..zA..Z0..9_.-]+;

@show @highlight(operator)
next_line = "\\" nl;

@show @highlight(keyword)
keywords = keyword;

@show @highlight(keyword) @static-completion
gnu = "abspath" / "addprefix" / "addsuffix" / "and" / "basename" /
 "call" / "dir" / "error" / "eval" / "file" / "filter-out" / "filter" /
 "findstring" / "firstword" / "flavor" / "foreach" / "guile" / "if" /
 "info" / "intcmp" / "join" / "lastword" / "let" / "notdir" /
 "origin" / "patsubst" / "realpath" / "shell" / "sort" / "strip" /
 "subst" / "suffix" / "value" / "warning" / "wildcard" / "word" /
 "wordlist" / "words" / "or";

@static-completion
keyword = "ifndef" / "ifeq" / "ifneq" / "ifdef" / "endif" / "else" / "define" / "vpath" / "endef" / "undefine" / "-include" / "sinclude" / "include" / "override" / "export" / "unexport" / "private";

@static-completion @highlight(preproc)
gnu_extra = ".LIBPATTERNS" / "SUFFIXES" / "CURDIR" / "MAKECMDGOALS" / "GNUMAKEFLAGS" / "MAKEFLAGS" / "MAKELEVEL" / "MAKE_HOST" / "MAKEFILES" / "MAKE_VERSION" / "VPATH" / "MAKESHELL" / "MAKE";

specials = spec spec_end / gnu_extra;
@show @highlight(preproc) @static-completion
spec = (".SUFFIXES" / ".PHONY" / ".DEFAULT" / ".PRECIOUS" / ".IGNORE" / ".SILENT" / ".NOTPARALLEL" / ".POSIX") ;
spec_end = (!nl .)*;

@show @highlight
comment = "#" (!nl .)*;

@show @highlight
string    =  sstring / nstring;
nstring = "\"" nstring_inner "\"";
@show @completion
nstring_inner    = ("\\" escape_char / [^"\n])*;

@show @highlight
sstring    = "'" sstring_inner "'";
@show @completion
sstring_inner    = ("\\" escape_char / [^'\n])*;

escape_char     = "0" / "t" / "n" / "r" / "\"" / "\\";

# Commons

WHITESPACE = [ \t];
nl = "\r\n" / "\n";
ws = WHITESPACE;
