document = (separated / (!stop .)+ / .)*;
separated = todo / keyword / string / constant / comment / preproc / type / operator / alpha;

alpha = [a..zA..Z0..9_]+;
stop = ws+ / "[" / "]" / "(" / ")" / ";" / "<" / ">" / "," / ":" / ".";
WHITESPACE = [ \t] / nl;
nl = "\n" / "\r\n";
ws = WHITESPACE;

@show @highlight
string = char / sstring;
char = "'" . "'";
sstring = "\"" (escape  / [^"])* "\"";
escape = "\\" .;

@show @highlight
constant = typecaps / "true" / "false" / "null" / number;

number = "-"? digit+ !"."/ "0x" hexdigit+;
digit = [0..9];
hexdigit = digit / [a..fA..F];
typecaps = [A..Z0..9_]+ &stop;

@show @highlight
comment = line_comment / block_comment;
line_comment = "//" (todo / (!nl .))* nl;
block_comment = "/*" (todo / (!"*/" .))* "*/";


preproc = annotation / preproc_words;
@show @highlight(preproc)
preproc_words = "import" &stop;
@show @highlight(preproc)
annotation = "@" [A..Za..z0..9_]+;

@show @highlight
type = ("boolean" / "char" / "void" / "byte" / number_types / classname) &stop;
number_types = "int" / "float" / "double" / "long" / "short";
classname = [A..Z] [a..zA..Z0..9_]*;

@show @highlight
operator = [\[\]{}():,.<>&|=+*/?!<>-];

@show @highlight(warn)
todo = "TODO" / "XXX";

@show @highlight
keyword = (
    "while" /
    "volatile" /
    "var" /
    "try" /
    "transient" /
    "throws" /
    "throw" /
    "this" /
    "synchronized" /
    "switch" /
    "super" /
    "strictfp" /
    "static" /
    "return" /
    "requires" /
    "public" /
    "protected" /
    "private" /
    "package" /
    "new" /
    "native" /
    "module" /
    "interface" /
    "instanceof" /
    "implements" /
    "if" /
    "goto" /
    "for" /
    "finally" /
    "final" /
    "extends" /
    "exports" /
    "enum" /
    "else" /
    "do" /
    "default" /
    "continue" /
    "const" /
    "class" /
    "catch" /
    "case" /
    "break" /
    "assert" /
    "abstract"
    ) &stop;
